[{"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\index.js":"1","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\App.js":"2","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Departments.js":"3","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Login.js":"4","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Home.js":"5","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Navbar.js":"6","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\About.js":"7","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Courses.js":"8","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Professors.js":"9","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Signup.js":"10","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Course.js":"11","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Department.js":"12","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Professor.js":"13","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\HomeCarosel.js":"14","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Button.js":"15","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Rating.js":"16","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\LoginForm.js":"17","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\List.js":"18","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Search.js":"19","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Logo.js":"20","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\SignupForm.js":"21","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\ReviewItem.js":"22","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Footer.js":"23"},{"size":174,"mtime":1612906143990,"results":"24","hashOfConfig":"25"},{"size":1788,"mtime":1613056082197,"results":"26","hashOfConfig":"25"},{"size":280,"mtime":1612906143997,"results":"27","hashOfConfig":"25"},{"size":469,"mtime":1613056082313,"results":"28","hashOfConfig":"25"},{"size":3244,"mtime":1613056082301,"results":"29","hashOfConfig":"25"},{"size":1264,"mtime":1613056082277,"results":"30","hashOfConfig":"25"},{"size":2625,"mtime":1613087368233,"results":"31","hashOfConfig":"25"},{"size":242,"mtime":1612907753344,"results":"32","hashOfConfig":"25"},{"size":253,"mtime":1612906144000,"results":"33","hashOfConfig":"25"},{"size":469,"mtime":1613056082313,"results":"34","hashOfConfig":"25"},{"size":8216,"mtime":1613070029658,"results":"35","hashOfConfig":"25"},{"size":7666,"mtime":1613070029659,"results":"36","hashOfConfig":"25"},{"size":7556,"mtime":1613070029670,"results":"37","hashOfConfig":"25"},{"size":1649,"mtime":1613056082261,"results":"38","hashOfConfig":"25"},{"size":255,"mtime":1612906143985,"results":"39","hashOfConfig":"25"},{"size":550,"mtime":1612906143988,"results":"40","hashOfConfig":"25"},{"size":2901,"mtime":1613056082265,"results":"41","hashOfConfig":"25"},{"size":761,"mtime":1612907753336,"results":"42","hashOfConfig":"25"},{"size":232,"mtime":1612906143989,"results":"43","hashOfConfig":"25"},{"size":175,"mtime":1612906143987,"results":"44","hashOfConfig":"25"},{"size":5867,"mtime":1613056082277,"results":"45","hashOfConfig":"25"},{"size":2416,"mtime":1613070029640,"results":"46","hashOfConfig":"25"},{"size":2163,"mtime":1613086495244,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"fp7aq2",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\index.js",[],["108","109"],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\App.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Departments.js",["110"],"import React, { Component } from \"react\";\r\n\r\nexport default class Departments extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"departments-container\">Here be Departmnets.</div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Login.js",["111"],"import React, { Component } from \"react\";\r\nimport LoginForm from '../components/LoginForm'\r\n\r\nconst formStyle = {\r\n    alignItems: 'center', \r\n    justifyContent: 'center',\r\n    display: 'flex', \r\n    marginTop: '8%',\r\n}\r\n\r\nexport default class Login extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div style={formStyle}>\r\n                <LoginForm/>            \r\n            </div>\r\n        )}\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Home.js",["112","113"],"import React, { Component } from \"react\";\r\nimport List from \"../components/List\";\r\nimport Rating from \"../components/Rating\";\r\nimport Button from \"../components/Button\";\r\nimport mockCourses from \"../data/courses.json\";\r\nimport mockProfessors from \"../data/professors.json\";\r\nimport mockDepartments from \"../data/departments.json\";\r\nimport HomePageCarosel from '../components/HomeCarosel.js'; \r\n\r\nexport default class Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.list = [\"professors\", \"courses\", \"departments\"];\r\n    }\r\n\r\n    // TODO: GET top 5 profs, courses and departs\r\n    getEntries(type) {\r\n        var data;\r\n        switch (type) {\r\n            case \"professors\":\r\n                data = mockProfessors;\r\n                break;\r\n            case \"courses\":\r\n                data = mockCourses;\r\n                break;\r\n            case \"departments\":\r\n                data = mockDepartments;\r\n                break;\r\n        }\r\n        // var sortIndex = data.cols.indexOf(\"rating\");\r\n        // data.data.sort((a, b) => {\r\n        //     return b[sortIndex] - a[sortIndex];\r\n        // });\r\n        // data.data = data.data.slice(0, 5);\r\n        // return [data.data, data.cols];\r\n    }\r\n\r\n  \r\n    render() {\r\n\r\n        return (\r\n            <div className=\"home-page\">\r\n                <div className=\"brock-images\">\r\n                   <HomePageCarosel/> \r\n                </div>\r\n                <div className=\"home-container\">\r\n                    {this.list.map((e, index) => {\r\n                        //var [data, labels] = this.getEntries(e);\r\n                        return (\r\n                            <div className={\"top-\" + e}>\r\n                                <h1>{\"Top 5 \" + e}</h1>\r\n                                <div className=\"top-list-container\">\r\n                                    <List\r\n                                        //data={data}\r\n                                        //labels={labels}\r\n                                        key={index}\r\n                                        link={\"/\" + e.slice(0, e.length - 1)}\r\n                                    />\r\n                                    <Button\r\n                                        id={e}\r\n                                        className=\"listButton\"\r\n                                        text={\"View all \" + e}\r\n                                        link={\"/\" + e}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                    {this.list.map((e, index) => {\r\n                        return (\r\n                            <Rating\r\n                                title={\r\n                                    \"Average \" +\r\n                                    e.slice(0, e.length - 1) +\r\n                                    \" rating\"\r\n                                }\r\n                                className={\"average-\" + e}\r\n                                id={e}\r\n                                key={index}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Navbar.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\About.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Courses.js",["114"],"import React, { Component } from \"react\";\r\n\r\nexport default class Courses extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n    render() {\r\n        return <div className=\"courses-container\">Here be Courses.</div>;\r\n    }\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Professors.js",["115"],"import React, { Component } from \"react\";\r\n\r\nexport default class Professors extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"professors-container\">Here be Professors.</div>;\r\n    }\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Signup.js",["116"],"import React, { Component } from \"react\";\r\nimport SignupForm from '../components/SignupForm'\r\n\r\nconst formStyle = {\r\n    alignItems: 'center', \r\n    justifyContent: 'center',\r\n    display: 'flex', \r\n    marginTop: '8%',\r\n}\r\n\r\nexport default class Signup extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div style={formStyle}>\r\n                <SignupForm/>            \r\n            </div>\r\n    )}\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Course.js",["117"],"import React, { Component } from \"react\";\r\nimport {Container, Row, Col, Tab, Button} from 'react-bootstrap'; \r\nimport {Link} from 'react-router-dom'; \r\nimport ReviewItem from '../components/ReviewItem'; \r\nimport Tabs from 'react-bootstrap/Tabs'\r\n\r\nconst pageStyles={\r\n    margin: '0 auto', \r\n    marginTop: '3%', \r\n    width: '90%', \r\n}; \r\n\r\nconst buttonStyle={\r\n    //height: '100vh',  \r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n}\r\n\r\nconst pageBreak = {\r\n    //this sets the margin for reviews and draws a line hovering under the titles \r\n    marginBottom: '2%', \r\n    height: '1px',\r\n    backgroundColor: '#dedede',\r\n    border: 'none',\r\n}\r\n\r\nconst tabStyle = { \r\n    paddingTop: '2.5%', \r\n    backgroundColor: '#ecf0f1', \r\n}\r\n\r\nexport default class Course extends Component {6\r\n    constructor(props) {\r\n        super(props);\r\n        //use state because react forces an update when it is modifed in some way \r\n        this.state = { //all the content that is gonna be retrieved from the api stored here locally\r\n            name: this.props.match.params.courseName,\r\n            department: \"COSC\", \r\n            code: \"2P03\", \r\n            avgRating: \"\", \r\n            reviews:[ \r\n                {//reviews would be an object \r\n                    title: \"Difficult but Important course!\",\r\n                    content: \"COSC 2P03 is one of the most foundational courses in the program. It opens the door to the rest of the computer science department and tests your knowledge. Beware, it can be quite tricky.\",\r\n                    rating: '3.9', \r\n                    user: \"seth\", \r\n                    comments: null, \r\n                },\r\n                {\r\n                    title: \"Difficult but Important course!\",\r\n                    content: \"COSC 2P03 is one of the most foundational courses in the program. It opens the door to the rest of the computer science department and tests your knowledge. Beware, it can be quite tricky.\",\r\n                    rating: '3.9', \r\n                    user: \"seth\", \r\n                    comments: null, \r\n                }, \r\n            ],  \r\n            instructors: [\r\n                \"Dave Bockus\", \r\n                \"Earl Foxwell\", \r\n            ], //another object \r\n            aliases: \"\", \r\n        }\r\n       \r\n\r\n        //this.componentDidMount(); \r\n    }\r\n\r\n    //TODO: GET req goes here that fetches data based on uid\r\n    componentDidMount() {\r\n        //this is just to have but will need to be slightly refactored \r\n        //once we talk to the back end people about how their stuff is named such as 'get-couse'\r\n        fetch('/api/get-course' + '?code=' + this.name)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            this.setState({ // the data.<variable> is just an example and will need to be changed to reflect what the backend returns \r\n                department: data.department, \r\n                code: data.code, \r\n                avgRating: data.avg_rating, \r\n                reviews: data.reviews, \r\n                instructors: data.instructors, \r\n                aliases: data.aliases, \r\n            });\r\n        }); \r\n    }\r\n    render() {\r\n        return (\r\n            <div style={pageStyles}>\r\n                <Container fluid=\"md\">\r\n                    <Row> {/* title row, includes course name and reviews*/}\r\n                        <Col sm={4}>\r\n                            <div name=\"title\">\r\n                                <h1 style={{textAlign: 'center'}}>{this.state.name}</h1>\r\n                            </div>  \r\n                            <div style={pageBreak}/> {/* underline */}\r\n\r\n                            <div name=\"avg-rating-container\">\r\n                                <div name=\"avg-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Overall Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"avg-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <p>Placeholder for star rating system</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div name=\"lecture-rating-container\" style={{marginTop: '25px'}}>\r\n                                <div name=\"lecture-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Lecture Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"lecture-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <p>Placeholder for star rating system</p>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div name=\"homework-rating-container\" style={{marginTop: '25px'}}>\r\n                                <div name=\"homework-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Homework Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"homework-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <p>Placeholder for star rating system</p>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div name=\"instructor-rating-container\" style={{marginTop: '25px'}}>\r\n                                <div name=\"instructor-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Instructor Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"instructor-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <p>Placeholder for star rating system</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={pageBreak}/> {/* underline */}\r\n\r\n                            <div style={{marginTop: '25px'}} name=\"freq-prof-container\">\r\n                                <div name=\"freq-professor-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Frequent Professors</h4>\r\n                                </div>   \r\n                                <div name=\"freq-prof-name\" style={{textAlign: 'center'}}>\r\n                                    {this.state.instructors.map((item) => \r\n                                    (<p><Link to={\"/professor/\" + item}>{item}</Link></p>))}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={pageBreak}/> {/* underline */}\r\n\r\n                            <div style={buttonStyle} name=\"review-button-container\">\r\n                                <Button size=\"lg\" variant=\"danger\">\r\n                                    Review this course\r\n                                </Button>\r\n                            </div>\r\n                            \r\n                        </Col>\r\n                        <Col sm={7}>\r\n                            <Tabs style={tabStyle} defaultActiveKey=\"reviews\" transition={false}>\r\n                                <Tab eventKey=\"reviews\" title=\"Reviews\">\r\n                                {this.state.reviews.map((item, index) => \r\n                                            (<ReviewItem id={index} reviewItem={item}/>)\r\n                                        ) /* generate all the reviews for this page */} \r\n                                </Tab>\r\n                                <Tab eventKey=\"forums\" title=\"Forums\">\r\n                                    <h6>Nothing to show yet; come back soon!</h6>\r\n                                </Tab>\r\n                            </Tabs>\r\n                            \r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Department.js",["118"],"import React, { Component } from \"react\";\r\nimport {Container, Row, Col, Tab, Button} from 'react-bootstrap'; \r\nimport {Link} from 'react-router-dom'; \r\nimport ReviewItem from '../components/ReviewItem'; \r\nimport Tabs from 'react-bootstrap/Tabs'\r\n\r\nconst pageStyles={\r\n    margin: '0 auto', \r\n    marginTop: '3%', \r\n    width: '90%', \r\n}; \r\n\r\nconst buttonStyle={\r\n    //height: '100vh',  \r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n}\r\n\r\nconst pageBreak = {\r\n    //this sets the margin for reviews and draws a line hovering under the titles \r\n    marginBottom: '2%', \r\n    height: '1px',\r\n    backgroundColor: '#dedede',\r\n    border: 'none',\r\n}\r\n\r\nconst tabStyle = { \r\n    paddingTop: '2.5%', \r\n    backgroundColor: '#ecf0f1', \r\n}\r\n\r\nexport default class Course extends Component {6\r\n    constructor(props) {\r\n        super(props);\r\n        //use state because react forces an update when it is modifed in some way \r\n        this.state = { //all the content that is gonna be retrieved from the api stored here locally\r\n            name: this.props.match.params.deptName,\r\n            avgRating: \"\", \r\n            reviews:[ \r\n                {//reviews would be an object \r\n                    title: \"Worst Department on Earth!\",\r\n                    content: \"This place is depression incarnate\",\r\n                    rating: '3.9', \r\n                    user: \"seth\", \r\n                    comments: null, \r\n                },\r\n               \r\n            ],  \r\n            instructors: [\r\n                \"Dave Bockus\", \r\n                \"Earl Foxwell\", \r\n            ], //another object \r\n            courses:[\"COSC 2P03\", \"COSC 2P89\"], \r\n        }\r\n       \r\n\r\n        //this.componentDidMount(); \r\n    }\r\n\r\n    //TODO: GET req goes here that fetches data based on uid\r\n    componentDidMount() {\r\n        //this is just to have but will need to be slightly refactored \r\n        //once we talk to the back end people about how their stuff is named such as 'get-couse'\r\n        fetch('/api/get-course' + '?code=' + this.name)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            this.setState({ // the data.<variable> is just an example and will need to be changed to reflect what the backend returns \r\n                department: data.department, \r\n                code: data.code, \r\n                avgRating: data.avg_rating, \r\n                reviews: data.reviews, \r\n                instructors: data.instructors, \r\n                aliases: data.aliases, \r\n            });\r\n        }); \r\n    }\r\n    render() {\r\n        return (\r\n            <div style={pageStyles}>\r\n                <Container fluid=\"md\">\r\n                    <Row> {/* title row, includes course name and reviews*/}\r\n                        <Col sm={4}>\r\n                            <div name=\"title\">\r\n                                <h1 style={{textAlign: 'center'}}>{this.state.name}</h1>\r\n                            </div>  \r\n                            <div style={pageBreak}/> {/* underline */}\r\n\r\n                            <div name=\"avg-rating-container\">\r\n                                <div name=\"avg-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Overall Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"avg-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <p>Placeholder for star rating system</p>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div name=\"course-rating-container\" style={{marginTop: '25px'}}>\r\n                                <div name=\"course-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Course Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"course-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <p>Placeholder for star rating system</p>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div name=\"instructor-rating-container\" style={{marginTop: '25px'}}>\r\n                                <div name=\"instructor-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Instructor Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"instructor-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <p>Placeholder for star rating system</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={pageBreak}/> {/* underline */}\r\n\r\n                            <div style={{marginTop: '25px'}} name=\"pop-prof-container\">\r\n                                <div name=\"pop-professor-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Popular Instructors</h4>\r\n                                </div>   \r\n                                <div name=\"pop-prof-name\" style={{textAlign: 'center'}}>\r\n                                    {this.state.instructors.map((item) => \r\n                                    (<p><Link to={\"/professor/\" + item}>{item}</Link></p>))}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={pageBreak}/> {/* underline */}\r\n\r\n                            <div style={{marginTop: '25px'}} name=\"pop-course-container\">\r\n                                <div name=\"pop-course-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Popular Courses</h4>\r\n                                </div>   \r\n                                <div name=\"pop-course-name\" style={{textAlign: 'center'}}>\r\n                                    {this.state.courses.map((item) => \r\n                                    (<p><Link to={\"/course/\" + item}>{item}</Link></p>))}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={pageBreak}/> {/* underline */}\r\n\r\n                            <div style={buttonStyle} name=\"review-button-container\">\r\n                                <Button size=\"lg\" variant=\"danger\">\r\n                                    Review this department\r\n                                </Button>\r\n                            </div>\r\n                            \r\n                        </Col>\r\n                        <Col sm={7}>\r\n                            <Tabs style={tabStyle} defaultActiveKey=\"reviews\" transition={false}>\r\n                                <Tab eventKey=\"reviews\" title=\"Reviews\">\r\n                                {this.state.reviews.map((item, index) => \r\n                                            (<ReviewItem id={index} reviewItem={item}/>)\r\n                                        ) /* generate all the reviews for this page */} \r\n                                </Tab>\r\n                                <Tab eventKey=\"forums\" title=\"Forums\">\r\n                                    <h6>Nothing to show yet; come back soon!</h6>\r\n                                </Tab>\r\n                            </Tabs>\r\n                            \r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Professor.js",["119"],"import React, { Component } from \"react\";\r\nimport {Container, Row, Col, Tab, Button} from 'react-bootstrap'; \r\nimport {Link} from 'react-router-dom'; \r\nimport ReviewItem from '../components/ReviewItem'; \r\nimport Tabs from 'react-bootstrap/Tabs'\r\n\r\nconst pageStyles={\r\n    margin: '0 auto', \r\n    marginTop: '3%', \r\n    width: '90%', \r\n}; \r\n\r\nconst buttonStyle={\r\n    //height: '100vh',  \r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n}\r\n\r\nconst pageBreak = {\r\n    //this sets the margin for reviews and draws a line hovering under the titles \r\n    marginBottom: '2%', \r\n    height: '1px',\r\n    backgroundColor: '#dedede',\r\n    border: 'none',\r\n}\r\n\r\nconst tabStyle = { \r\n    paddingTop: '2.5%', \r\n    backgroundColor: '#ecf0f1', \r\n}\r\n\r\nexport default class Course extends Component {6\r\n    constructor(props) {\r\n        super(props);\r\n        //use state because react forces an update when it is modifed in some way \r\n        this.state = { //all the content that is gonna be retrieved from the api stored here locally\r\n            name: this.props.match.params.profName,\r\n            courses: [\r\n                \"COSC 2P12\", \r\n                \"COSC 3P94\",\r\n            ],\r\n            avgRating: \"\", \r\n            reviews: [\r\n                {\r\n                    title: \"Tough love type prof !\",\r\n                    content: \"If you put the work in and show that you actually want to be there, Bockus will do everything in his power to help you succeed. Otherwise you're SOL\",\r\n                    rating: '3.9', \r\n                    user: \"seth\", \r\n                    comments: null, \r\n                }\r\n            ]\r\n\r\n        }\r\n       \r\n\r\n        //this.componentDidMount(); \r\n    }\r\n\r\n    //TODO: GET req goes here that fetches data based on uid\r\n    componentDidMount() {\r\n        //this is just to have but will need to be slightly refactored \r\n        //once we talk to the back end people about how their stuff is named such as 'get-couse'\r\n        fetch('/api/get-instructor' + '?code=' + this.name)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            this.setState({ // the data.<variable> is just an example and will need to be changed to reflect what the backend returns \r\n                department: data.department, \r\n                code: data.code, \r\n                avgRating: data.avg_rating, \r\n                reviews: data.reviews, \r\n                courses: data.courses, \r\n                aliases: data.aliases, \r\n            });\r\n        }); \r\n    }\r\n    render() {\r\n        return (\r\n            <div style={pageStyles}>\r\n                <Container fluid=\"md\">\r\n                    <Row> {/* title row, includes course name and reviews*/}\r\n                        <Col sm={4}>\r\n                            <div name=\"title\">\r\n                                <h1 style={{textAlign: 'center'}}>{this.state.name}</h1>\r\n                            </div>  \r\n                            <div style={pageBreak}/> {/* underline */}\r\n\r\n                            <div name=\"avg-rating-container\">\r\n                                <div name=\"avg-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Overall Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"avg-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <p>Placeholder for star rating system</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div name=\"lecture-rating-container\" style={{marginTop: '25px'}}>\r\n                                <div name=\"lecture-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Lecture Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"lecture-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <p>Placeholder for star rating system</p>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div name=\"homework-rating-container\" style={{marginTop: '25px'}}>\r\n                                <div name=\"homework-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Homework Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"homework-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <p>Placeholder for star rating system</p>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div name=\"course-rating-container\" style={{marginTop: '25px'}}>\r\n                                <div name=\"course-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Course Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"course-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <p>Placeholder for star rating system</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={pageBreak}/> {/* underline */}\r\n\r\n                            <div style={{marginTop: '25px'}} name=\"freq-course-container\">\r\n                                <div name=\"freq-course-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Frequent Courses</h4>\r\n                                </div>   \r\n                                <div name=\"freq-course-name\" style={{textAlign: 'center'}}>\r\n                                    {this.state.courses.map((item) => \r\n                                    (<p><Link to={\"/course/\" + item}>{item}</Link></p>))}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={pageBreak}/> {/* underline */}\r\n\r\n                            <div style={buttonStyle} name=\"review-button-container\">\r\n                                <Button size=\"lg\" variant=\"danger\">\r\n                                    Review this Instructor\r\n                                </Button>\r\n                            </div>\r\n                            \r\n                        </Col>\r\n                        <Col sm={7}>\r\n                            <Tabs style={tabStyle} defaultActiveKey=\"reviews\" transition={false}>\r\n                                <Tab eventKey=\"reviews\" title=\"Reviews\">\r\n                                {this.state.reviews.map((item, index) => \r\n                                            (<ReviewItem id={index} reviewItem={item}/>)\r\n                                        ) /* generate all the reviews for this page */} \r\n                                </Tab>\r\n                                <Tab eventKey=\"forums\" title=\"Forums\">\r\n                                    <h6>Nothing to show yet; come back soon!</h6>\r\n                                </Tab>\r\n                            </Tabs>\r\n                            \r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\HomeCarosel.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Button.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Rating.js",["120","121"],"import React, { Component } from \"react\";\r\nexport default class Rating extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    //TODO: GET ratings depending on type\r\n    getRatings() {\r\n        var rating;\r\n        var id = this.props.id;\r\n\r\n        rating = 4.7;\r\n\r\n        return rating;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.className}>\r\n                <h2>\r\n                    {this.props.title} {this.getRatings()}\r\n                </h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\LoginForm.js",["122"],"import React, { Component } from 'react'; \r\nimport {Form, Button, Card} from 'react-bootstrap'; \r\nimport { Router } from 'react-router';\r\nimport {Link} from 'react-router-dom'; \r\n\r\n\r\n\r\nconst formStyle = {\r\n    //textAlign: 'center',\r\n    width: '30rem',\r\n    //justifyContent: 'center',\r\n}\r\n\r\nconst buttonStyle = {\r\n    justifyContent: 'center',\r\n    marginRight: '13px', \r\n}\r\n\r\nexport default class LoginForm extends Component {\r\n\r\n    constructor(props){\r\n        super(props); \r\n        this.state = { \r\n            email: \"\", \r\n            password: \"\", \r\n        }\r\n        this.updateEmailInput = this.updateEmailInput.bind(this);\r\n        this.updatePasswordInput = this.updatePasswordInput.bind(this);\r\n\r\n        this.submitForm = this.submitForm.bind(this); \r\n    }\r\n\r\n    updateEmailInput(obj){\r\n        this.setState({\r\n            email: obj.target.value, \r\n        });\r\n    }\r\n\r\n    updatePasswordInput(obj){\r\n        this.setState({\r\n            password: obj.target.value, \r\n        });\r\n    }\r\n\r\n\r\n    submitForm = () => {\r\n        //send info to backend \r\n            //this.state.email \r\n            //this.state.password\r\n            \r\n        let userIsVerified = true; \r\n        if(userIsVerified){ // replace with response from back end \r\n            //set login status to true \r\n            //have user stuff in local storage? \r\n            \r\n            //route to home page \r\n        }else{ \r\n            alert(\"Invalid Email or Username. Please try again.\")\r\n        }\r\n    }\r\n\r\n    routeToRegister(){ \r\n\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div>\r\n                <Card style={formStyle}>\r\n                    <Card.Header as='h4'>Sign In</Card.Header>\r\n                    <Card.Body>\r\n                        <Form>\r\n                            <Form.Group controlId=\"formGroupEmail\">\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control type=\"email\" onChange={this.updateEmailInput} placeholder=\"Enter email\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formGroupPassword\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" onChange={this.updatePasswordInput} placeholder=\"Password\" />\r\n                            </Form.Group>\r\n                            <Button style={buttonStyle}variant=\"danger\" onClick={this.submitForm}>\r\n                                Sign In\r\n                            </Button>\r\n                            \r\n                            <Button style={buttonStyle} variant=\"danger\" as={Link} to='/Signup'>\r\n                                Register\r\n                            </Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        ); \r\n    }\r\n}","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\List.js",["123","124","125"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function List(props) {\r\n    const { data, labels, link } = { ...props };\r\n    // return data.map((e) => {\r\n    //     console.log(e);\r\n    return (\r\n        <Link className=\"listEntry\" to=\"/courses\">\r\n            {/* {e.map(([label, value]) => {\r\n                    return <div key={label}>{value}</div>;\r\n                })} */}\r\n            <div>placeholder</div>\r\n        </Link>\r\n    );\r\n    // return (\r\n    //     <Link className=\"listEntry\" to={{ pathname: link, id: key }}>\r\n    //         {Object.entries(entry).map(([label, value]) => {\r\n    //             return <div key={label}>{value}</div>;\r\n    //         })}\r\n    //     </Link>\r\n    // );\r\n    // });\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Search.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Logo.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\SignupForm.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\ReviewItem.js",["126","127"],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Card, Accordion, Button, ListGroup, ListGroupItem} from 'react-bootstrap'; \r\n\r\n\r\nconst noCommentMessage = \"No comments yet!\";\r\n\r\n\r\nexport default class ReviewItem extends Component {\r\n\r\n    //props is going to consist of the review item passed by the course \r\n    constructor(props){\r\n        super(props); \r\n        //props contains object called reviewItem containing \r\n        /*\r\n        -Title \r\n        -Content\r\n        -Rating \r\n        -User\r\n        -Comments (object)\r\n        */\r\n    }\r\n\r\n    //the JSX that is rendered when this file is imported as a component \r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                {/* container (card )which includes a title section + rating and a content section + button to see comments */}\r\n                    <Card style={{marginTop: '4%'}}>\r\n                        <Accordion>\r\n                            <Card.Body>\r\n                                <Card.Title>{this.props.reviewItem.title}</Card.Title>\r\n                                <Card.Subtitle className=\"mb-2 text-muted\">{this.props.reviewItem.user + \" - \" + this.props.reviewItem.rating + \"/5\"} </Card.Subtitle>\r\n                                <Card.Text>\r\n                                    {this.props.reviewItem.content}\r\n                                </Card.Text>\r\n                                <Accordion.Toggle as={Button} variant=\"danger\" eventKey=\"0\">\r\n                                    Show Comments\r\n                                </Accordion.Toggle>\r\n                            </Card.Body>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <ListGroup >\r\n                                    {this.props.reviewItem.comments != null ?\r\n                                        this.props.reviewItem.comments.map((item, index) => \r\n                                            <ListGroupItem key={index}>\r\n                                                {item.content}\r\n                                            </ListGroupItem> )\r\n                                        : \"No comments yet!\"} \r\n                                </ListGroup>\r\n                            </Accordion.Collapse>\r\n                        </Accordion>    \r\n                    </Card>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Footer.js",["128","129","130"],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":4,"column":5,"nodeType":"137","messageId":"138","endLine":6,"endColumn":6},{"ruleId":"135","severity":1,"message":"136","line":12,"column":5,"nodeType":"137","messageId":"138","endLine":14,"endColumn":6},{"ruleId":"139","severity":1,"message":"140","line":19,"column":9,"nodeType":"141","messageId":"142","endLine":29,"endColumn":10},{"ruleId":"143","severity":1,"message":"144","line":27,"column":17,"nodeType":"145","messageId":"146","endLine":27,"endColumn":21},{"ruleId":"135","severity":1,"message":"136","line":4,"column":5,"nodeType":"137","messageId":"138","endLine":6,"endColumn":6},{"ruleId":"135","severity":1,"message":"136","line":4,"column":5,"nodeType":"137","messageId":"138","endLine":6,"endColumn":6},{"ruleId":"135","severity":1,"message":"136","line":12,"column":5,"nodeType":"137","messageId":"138","endLine":14,"endColumn":6},{"ruleId":"147","severity":1,"message":"148","line":73,"column":33,"nodeType":"149","messageId":"150","endLine":73,"endColumn":34},{"ruleId":"147","severity":1,"message":"148","line":65,"column":33,"nodeType":"149","messageId":"150","endLine":65,"endColumn":34},{"ruleId":"147","severity":1,"message":"148","line":64,"column":37,"nodeType":"149","messageId":"150","endLine":64,"endColumn":38},{"ruleId":"135","severity":1,"message":"136","line":3,"column":5,"nodeType":"137","messageId":"138","endLine":5,"endColumn":6},{"ruleId":"143","severity":1,"message":"151","line":10,"column":13,"nodeType":"145","messageId":"146","endLine":10,"endColumn":15},{"ruleId":"143","severity":1,"message":"152","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":5,"column":13,"nodeType":"145","messageId":"146","endLine":5,"endColumn":17},{"ruleId":"143","severity":1,"message":"153","line":5,"column":19,"nodeType":"145","messageId":"146","endLine":5,"endColumn":25},{"ruleId":"143","severity":1,"message":"154","line":5,"column":27,"nodeType":"145","messageId":"146","endLine":5,"endColumn":31},{"ruleId":"143","severity":1,"message":"155","line":6,"column":7,"nodeType":"145","messageId":"146","endLine":6,"endColumn":23},{"ruleId":"135","severity":1,"message":"136","line":12,"column":5,"nodeType":"137","messageId":"138","endLine":22,"endColumn":6},{"ruleId":"143","severity":1,"message":"156","line":1,"column":10,"nodeType":"145","messageId":"146","endLine":1,"endColumn":16},{"ruleId":"143","severity":1,"message":"157","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":14},{"ruleId":"135","severity":1,"message":"136","line":8,"column":5,"nodeType":"137","messageId":"138","endLine":10,"endColumn":6},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'id' is assigned a value but never used.","'Router' is defined but never used.","'labels' is assigned a value but never used.","'link' is assigned a value but never used.","'noCommentMessage' is assigned a value but never used.","'render' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]