[{"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\index.js":"1","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\App.js":"2","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Forum.js":"3","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Login.js":"4","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Signup.js":"5","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Footer.js":"6","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\About.js":"7","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Departments.js":"8","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Navbar.js":"9","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Department.js":"10","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Home.js":"11","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Professor.js":"12","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Course.js":"13","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Courses.js":"14","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\PageNotFound.js":"15","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Professors.js":"16","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\assets\\Signout.js":"17","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\HomeCarosel.js":"18","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\SignupForm.js":"19","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Search.js":"20","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Logo.js":"21","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Rating.js":"22","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\LoginForm.js":"23","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Loading.js":"24","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Button.js":"25","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\ReviewForm.js":"26","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\ReviewItem.js":"27","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\List.js":"28","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Dropdown.js":"29","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Post.js":"30"},{"size":174,"mtime":1612906143990,"results":"31","hashOfConfig":"32"},{"size":2311,"mtime":1613659204059,"results":"33","hashOfConfig":"32"},{"size":5069,"mtime":1613692582507,"results":"34","hashOfConfig":"32"},{"size":469,"mtime":1613250935882,"results":"35","hashOfConfig":"32"},{"size":469,"mtime":1613250935905,"results":"36","hashOfConfig":"32"},{"size":2117,"mtime":1613250946427,"results":"37","hashOfConfig":"32"},{"size":2976,"mtime":1613665584692,"results":"38","hashOfConfig":"32"},{"size":3512,"mtime":1613659204155,"results":"39","hashOfConfig":"32"},{"size":2286,"mtime":1613659204107,"results":"40","hashOfConfig":"32"},{"size":9221,"mtime":1613250946606,"results":"41","hashOfConfig":"32"},{"size":3372,"mtime":1613659204163,"results":"42","hashOfConfig":"32"},{"size":9565,"mtime":1613250946680,"results":"43","hashOfConfig":"32"},{"size":9660,"mtime":1613659204131,"results":"44","hashOfConfig":"32"},{"size":10201,"mtime":1613659204143,"results":"45","hashOfConfig":"32"},{"size":177,"mtime":1613250946658,"results":"46","hashOfConfig":"32"},{"size":10688,"mtime":1613659204171,"results":"47","hashOfConfig":"32"},{"size":616,"mtime":1613250946537,"results":"48","hashOfConfig":"32"},{"size":1644,"mtime":1613250946445,"results":"49","hashOfConfig":"32"},{"size":5867,"mtime":1613250935761,"results":"50","hashOfConfig":"32"},{"size":232,"mtime":1612906143989,"results":"51","hashOfConfig":"32"},{"size":175,"mtime":1612906143987,"results":"52","hashOfConfig":"32"},{"size":550,"mtime":1612906143988,"results":"53","hashOfConfig":"32"},{"size":3062,"mtime":1613250946471,"results":"54","hashOfConfig":"32"},{"size":287,"mtime":1613659204095,"results":"55","hashOfConfig":"32"},{"size":842,"mtime":1613659204067,"results":"56","hashOfConfig":"32"},{"size":5073,"mtime":1613250946510,"results":"57","hashOfConfig":"32"},{"size":2984,"mtime":1613659204115,"results":"58","hashOfConfig":"32"},{"size":449,"mtime":1613659204087,"results":"59","hashOfConfig":"32"},{"size":2589,"mtime":1613659204079,"results":"60","hashOfConfig":"32"},{"size":728,"mtime":1613674906015,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"fp7aq2",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\index.js",[],["137","138"],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\App.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Forum.js",["139","140","141","142","143","144","145","146","147"],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Login.js",["148"],"import React, { Component } from \"react\";\r\nimport LoginForm from '../components/LoginForm'\r\n\r\nconst formStyle = {\r\n    alignItems: 'center', \r\n    justifyContent: 'center',\r\n    display: 'flex', \r\n    marginTop: '8%',\r\n}\r\n\r\nexport default class Login extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div style={formStyle}>\r\n                <LoginForm/>            \r\n            </div>\r\n        )}\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Signup.js",["149"],"import React, { Component } from \"react\";\r\nimport SignupForm from '../components/SignupForm'\r\n\r\nconst formStyle = {\r\n    alignItems: 'center', \r\n    justifyContent: 'center',\r\n    display: 'flex', \r\n    marginTop: '8%',\r\n}\r\n\r\nexport default class Signup extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return ( \r\n            <div style={formStyle}>\r\n                <SignupForm/>            \r\n            </div>\r\n    )}\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Footer.js",["150","151"],"import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default class Footer extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <style>\r\n\r\n                </style>\r\n                <div className=\"footer-container\">\r\n                    <div className=\"row\">\r\n                        {/*Column 1 */}\r\n                        <div className=\"col-md-3 col-sm-6\">\r\n                            <h4>Address </h4>\r\n                            <ul className=\"footer-list\">\r\n                                <li> 1812 Sir Isaac Brock Way,</li>\r\n                                <li>  St. Catharines, ON L2S 3A1</li>\r\n                                <li> +1 905 XXX-XXXX</li>\r\n                            </ul>\r\n                        </div>\r\n                        {/*Column 2 */}\r\n                        <div className=\"col-md-3 col-sm-6\">\r\n                            <h4>Important Links </h4>\r\n                            <ul className=\"footer-list\">\r\n                            <a className=\"footer-link\" href=\"https://github.com/SethShickluna/COSC-4P02-R8Scholar\"><li> GitHub</li></a>\r\n                            </ul>\r\n                        </div>\r\n                        {/*Column 3 */}\r\n                        <div className=\"col-md-3 col-sm-6\">\r\n                            <h4>Follow Us </h4>\r\n                            <ul className=\"footer-list\">\r\n                            <a className=\"footer-link\" href=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"><li> Youtube</li></a>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    {/* Footer Bottom */}\r\n                    <div className=\"footer-bottom\" >\r\n                        <p className=\"copyright-text\">\r\n                            &copy;{new Date().getFullYear()} R8Scholar.com - All Rights Reserved\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n    }\r\n} ","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\About.js",["152"],"import React, { Component } from \"react\";\r\nimport Footer from '../components/Footer'; \r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"about-container\">\r\n                <div>\r\n                    <h1 style={{textAlign: 'center'}}>\r\n                        About us\r\n                    </h1>\r\n                </div>\r\n                <div className=\"label\">Our Goal</div>\r\n                <div className=\"text\">\r\n                    <p>The goal of this website is to centralize the thoughts and opinions of the Brock University community. We aim to provide a comprehensive\r\n                an complete experience for the users on the site, as well as providing visitors an overview of the Universities academic structure.\r\n\r\n                The importance of this project also is derived from the fact that web development technologies are always growing and expanding so having\r\n                hands-on experience with these technologies allows us to become increasingly familiar with developer technologies that are used in the industry </p>\r\n                </div>\r\n                <div className=\"label\">Your Privacy Our Priority</div>\r\n                <div className=\"text\">\r\n                    <p>The users of the website should be aware of the terms and conditions as well as any community guidlines in order to properly use the site as designed</p>\r\n                </div>\r\n                <div className=\"label\">Project Information</div>\r\n                <div className=\"text\">\r\n                    <p>This website is similar to known websites such as\r\n                    RateMyProfessor.com but with a few modifications. This website would allow students from Brock University to sign up and contribute, or to view content anonymously. The differences when compared to RateMyProfessor is our site allows not only professors to be rated but also courses and departments. Furthermore, each opportunity for rating will also come with a place to leave comments as well as forum discussion from verified users. We have considered the name ‘R8Scholar’ for this project.\r\n                The objective of this project is to deliver a comprehensive experience for Brock students to be able to communicate about their experiences and to give advice/information on potential interactions they might have at the school.\r\n                This project is important in the sense that Brock University does not have a form of social networking which can bring together and educate the student community on what experiences are common at the University. This will allow Brock students to have a personalized experience in which they can better understand which programs, resources, or people are best fit to them as well as give feedback after having that experience in order for other Brock students to benefit as well.\r\n                </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Departments.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Navbar.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Department.js",["153","154","155"],"import React, { Component } from \"react\";\r\nimport {Container, Row, Col, Tab, Button} from 'react-bootstrap'; \r\nimport {Link} from 'react-router-dom'; \r\nimport ReviewItem from '../components/ReviewItem'; \r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport StarRatings from 'react-star-ratings';\r\nimport ReviewForm from '../components/ReviewForm'; \r\nimport cookie from 'react-cookies'; \r\n\r\nconst pageStyles={\r\n    margin: '0 auto', \r\n    marginTop: '3%', \r\n    width: '90%', \r\n}; \r\n\r\nconst buttonStyle={\r\n    //height: '100vh',  \r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n}\r\n\r\nconst pageBreak = {\r\n    //this sets the margin for reviews and draws a line hovering under the titles \r\n    marginBottom: '2%', \r\n    height: '1px',\r\n    backgroundColor: '#dedede',\r\n    border: 'none',\r\n}\r\n\r\nconst tabStyle = { \r\n    paddingTop: '2.5%', \r\n    backgroundColor: '#ecf0f1', \r\n}\r\n\r\nexport default class Course extends Component {6\r\n    constructor(props) {\r\n        super(props);\r\n        //use state because react forces an update when it is modifed in some way \r\n        this.state = { //all the content that is gonna be retrieved from the api stored here locally\r\n            name: this.props.match.params.deptName,\r\n            avgRating: 1.7,\r\n            instructorRating: 2.5, \r\n            courseRating: 1.3,\r\n            reviews:[ \r\n                {//reviews would be an object \r\n                    title: \"Worst Department on Earth!\",\r\n                    content: \"This place is depression incarnate\",\r\n                    rating: 2.5, \r\n                    user: \"seth\", \r\n                    comments: null, \r\n                },\r\n               \r\n            ],  \r\n            instructors: [\r\n                \"Dave Bockus\", \r\n                \"Earl Foxwell\", \r\n            ], //another object \r\n            courses:[\"COSC 2P03\", \"COSC 2P89\"], \r\n        }\r\n       \r\n\r\n        //this.componentDidMount(); \r\n    }\r\n\r\n    //TODO: GET req goes here that fetches data based on uid\r\n    componentDidMount() {\r\n        //this is just to have but will need to be slightly refactored \r\n        //once we talk to the back end people about how their stuff is named such as 'get-couse'\r\n        fetch('/api/get-course' + '?code=' + this.name)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            this.setState({ // the data.<variable> is just an example and will need to be changed to reflect what the backend returns \r\n                department: data.department, \r\n                code: data.code, \r\n                avgRating: data.avg_rating, \r\n                reviews: data.reviews, \r\n                instructors: data.instructors, \r\n                aliases: data.aliases, \r\n            });\r\n        }); \r\n    }\r\n    render() {\r\n        return (\r\n            <div style={pageStyles}>\r\n                <Container fluid=\"md\">\r\n                    <Row> {/* title row, includes course name and reviews*/}\r\n                        <Col sm={4}>\r\n                            <div name=\"title\">\r\n                                <h1 style={{textAlign: 'center'}}>{this.state.name}</h1>\r\n                            </div>  \r\n                            <div style={pageBreak}/> {/* underline */}\r\n\r\n                            <div name=\"avg-rating-container\">\r\n                                <div name=\"avg-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Overall Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"avg-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <StarRatings\r\n                                        rating={this.state.avgRating}\r\n                                        starDimension=\"40px\"\r\n                                        starSpacing=\"10px\"\r\n                                        starRatedColor=\"red\"\r\n                                        numberOfStars={5}\r\n                                        name='avgRating'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div name=\"course-rating-container\" style={{marginTop: '25px'}}>\r\n                                <div name=\"course-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Course Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"course-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <StarRatings\r\n                                        rating={this.state.courseRating}\r\n                                        starDimension=\"30px\"\r\n                                        starSpacing=\"10px\"\r\n                                        starRatedColor=\"red\"\r\n                                        numberOfStars={5}\r\n                                        name='courseRating'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div name=\"instructor-rating-container\" style={{marginTop: '25px'}}>\r\n                                <div name=\"instructor-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Instructor Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"instructor-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <StarRatings\r\n                                        rating={this.state.instructorRating}\r\n                                        starDimension=\"30px\"\r\n                                        starSpacing=\"10px\"\r\n                                        starRatedColor=\"red\"\r\n                                        numberOfStars={5}\r\n                                        name='instructorRating'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={pageBreak}/> {/* underline */}\r\n\r\n                            <div style={{marginTop: '25px'}} name=\"pop-prof-container\">\r\n                                <div name=\"pop-professor-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Popular Instructors</h4>\r\n                                </div>   \r\n                                <div name=\"pop-prof-name\" style={{textAlign: 'center'}}>\r\n                                    {this.state.instructors.map((item) => \r\n                                    (<p><Link to={\"/professor/\" + item}>{item}</Link></p>))}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={pageBreak}/> {/* underline */}\r\n\r\n                            <div style={{marginTop: '25px'}} name=\"pop-course-container\">\r\n                                <div name=\"pop-course-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Popular Courses</h4>\r\n                                </div>   \r\n                                <div name=\"pop-course-name\" style={{textAlign: 'center'}}>\r\n                                    {this.state.courses.map((item) => \r\n                                    (<p><Link to={\"/course/\" + item}>{item}</Link></p>))}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={pageBreak}/> {/* underline */}\r\n                            \r\n                        </Col>\r\n                        <Col sm={7}>\r\n                            <Tabs style={tabStyle} defaultActiveKey=\"reviews\" transition={false}>\r\n                                <Tab eventKey=\"reviews\" title=\"Reviews\">\r\n                                {this.state.reviews.map((item, index) => \r\n                                            (<ReviewItem id={index} key={\"department-review\"+index} reviewItem={item}/>)\r\n                                        ) /* generate all the reviews for this page */} \r\n                                </Tab>\r\n                                <Tab eventKey=\"forums\" title=\"Forums\">\r\n                                    <h6>Nothing to show yet; come back soon!</h6>\r\n                                </Tab>\r\n                                <Tab eventKey=\"create-review\" title=\"Create Review\">\r\n                                {cookie.load('isLoggedIn') === \"true\" ? \r\n                                        (<ReviewForm review=\"department\"/>)\r\n                                        : (<div style={{marginLeft: \"20px\"}}>Please log in or signup to create a review.</div>)\r\n                                    }\r\n                                </Tab>\r\n                            </Tabs>\r\n                            \r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Home.js",["156"],"import React, { Component } from \"react\";\r\nimport List from \"../components/List\";\r\nimport Rating from \"../components/Rating\";\r\nimport Button from \"../components/Button\";\r\nimport HomePageCarosel from \"../components/HomeCarosel.js\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nexport default class Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            list: [\"professors\", \"courses\", \"departments\"],\r\n            professors: [],\r\n            courses: [],\r\n            departments: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.state.list.map((e) => {\r\n            this.getEntries(e);\r\n        });\r\n    }\r\n\r\n    // TODO: GET top 5 profs, courses and departs\r\n    getEntries = async (type) => {\r\n        await fetch(\"http://localhost:3000/data/\" + type + \".json\").then(\r\n            (res) => {\r\n                res.json().then((data) => {\r\n                    data.data.sort((a, b) => {\r\n                        return b.rating - a.rating;\r\n                    });\r\n                    this.setState({ [type]: data.data.slice(0, 5) });\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home-page\">\r\n                <div className=\"brock-images\">\r\n                    <HomePageCarosel />\r\n                </div>\r\n                {!this.state.courses.length &&\r\n                !this.state.departments.length &&\r\n                !this.state.professors.length ? (\r\n                    <Loading size=\"75\" />\r\n                ) : (\r\n                    <div className=\"home-container\">\r\n                        {this.state.list.map((e, index) => {\r\n                            return (\r\n                                <div className=\"list-container\">\r\n                                    <h1>{\"Top 5 \" + e}</h1>\r\n                                    <List\r\n                                        data={this.state[e]}\r\n                                        columns={[\"name\", \"rating\"]}\r\n                                        key={index}\r\n                                        link={\"/\" + e.slice(0, e.length - 1) + \"/\"}\r\n                                    />\r\n                                    <Button\r\n                                        id={e}\r\n                                        className=\"list-button\"\r\n                                        text={\"View all \" + e}\r\n                                        link={\"/\" + e}\r\n                                    />\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        {this.state.list.map((e, index) => {\r\n                            return (\r\n                                <Rating\r\n                                    title={\r\n                                        \"Average \" +\r\n                                        e.slice(0, e.length - 1) +\r\n                                        \" rating\"\r\n                                    }\r\n                                    className={\"average-\" + e}\r\n                                    id={e}\r\n                                    key={index}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Professor.js",["157","158","159"],"import React, { Component } from \"react\";\r\nimport {Container, Row, Col, Tab, Button} from 'react-bootstrap'; \r\nimport {Link} from 'react-router-dom'; \r\nimport ReviewItem from '../components/ReviewItem'; \r\nimport Tabs from 'react-bootstrap/Tabs'; \r\nimport StarRatings from 'react-star-ratings';\r\nimport ReviewForm from '../components/ReviewForm'; \r\nimport cookie from 'react-cookies'; \r\n\r\nconst pageStyles={\r\n    margin: '0 auto', \r\n    marginTop: '3%', \r\n    width: '90%', \r\n}; \r\n\r\nconst buttonStyle={\r\n    //height: '100vh',  \r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n}\r\n\r\nconst pageBreak = {\r\n    //this sets the margin for reviews and draws a line hovering under the titles \r\n    marginBottom: '2%', \r\n    marginTop: '2%',\r\n    height: '1px',\r\n    backgroundColor: '#dedede',\r\n    border: 'none',\r\n}\r\n\r\nconst tabStyle = { \r\n    paddingTop: '2.5%', \r\n    backgroundColor: '#ecf0f1', \r\n}\r\n\r\nexport default class Course extends Component {6\r\n    constructor(props) {\r\n        super(props);\r\n        //use state because react forces an update when it is modifed in some way \r\n        this.state = { //all the content that is gonna be retrieved from the api stored here locally\r\n            name: this.props.match.params.profName,\r\n            courses: [\r\n                \"COSC 2P12\", \r\n                \"COSC 3P94\",\r\n            ],\r\n            avgRating: 2.7, \r\n            lectureRating: 2, \r\n            homeworkRating: 3.8, \r\n            courseRating: 3.2, \r\n            reviews: [\r\n                {\r\n                    title: \"Tough love type prof !\",\r\n                    content: \"If you put the work in and show that you actually want to be there, Bockus will do everything in his power to help you succeed. Otherwise you're SOL\",\r\n                    rating: 2.3, \r\n                    user: \"seth\", \r\n                    comments: null, \r\n                }\r\n            ]\r\n\r\n        }\r\n       \r\n\r\n        //this.componentDidMount(); \r\n    }\r\n\r\n    //TODO: GET req goes here that fetches data based on uid\r\n    componentDidMount() {\r\n        //this is just to have but will need to be slightly refactored \r\n        //once we talk to the back end people about how their stuff is named such as 'get-couse'\r\n        fetch('/api/get-instructor' + '?code=' + this.name)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            this.setState({ // the data.<variable> is just an example and will need to be changed to reflect what the backend returns \r\n                department: data.department, \r\n                code: data.code, \r\n                avgRating: data.avg_rating, \r\n                reviews: data.reviews, \r\n                courses: data.courses, \r\n                aliases: data.aliases, \r\n            });\r\n        }); \r\n    }\r\n    render() {\r\n        return (\r\n            <div style={pageStyles}>\r\n                <Container fluid=\"md\">\r\n                    <Row> {/* title row, includes course name and reviews*/}\r\n                        <Col sm={4}>\r\n                            <div name=\"title\">\r\n                                <h1 style={{textAlign: 'center'}}>{this.state.name}</h1>\r\n                            </div>  \r\n                            <div style={pageBreak}/> {/* underline */}\r\n\r\n                            <div name=\"avg-rating-container\">\r\n                                <div name=\"avg-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Overall Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"avg-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <StarRatings\r\n                                        rating={this.state.avgRating}\r\n                                        starDimension=\"40px\"\r\n                                        starSpacing=\"10px\"\r\n                                        starRatedColor=\"red\"\r\n                                        numberOfStars={5}\r\n                                        name='avgRating'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div name=\"lecture-rating-container\" style={{marginTop: '25px'}}>\r\n                                <div name=\"lecture-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Lecture Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"lecture-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <StarRatings\r\n                                        rating={this.state.lectureRating}\r\n                                        starDimension=\"30px\"\r\n                                        starSpacing=\"10px\"\r\n                                        starRatedColor=\"red\"\r\n                                        numberOfStars={5}\r\n                                        name='lectureRating'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div name=\"homework-rating-container\" style={{marginTop: '25px'}}>\r\n                                <div name=\"homework-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Homework Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"homework-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <StarRatings\r\n                                        rating={this.state.homeworkRating}\r\n                                        starDimension=\"30px\"\r\n                                        starSpacing=\"10px\"\r\n                                        starRatedColor=\"red\"\r\n                                        numberOfStars={5}\r\n                                        name='homeworkRating'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div name=\"course-rating-container\" style={{marginTop: '25px'}}>\r\n                                <div name=\"course-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Course Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"course-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <StarRatings\r\n                                        rating={this.state.courseRating}\r\n                                        starDimension=\"30px\"\r\n                                        starSpacing=\"10px\"\r\n                                        starRatedColor=\"red\"\r\n                                        numberOfStars={5}\r\n                                        name='courseRating'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={pageBreak}/> {/* underline */}\r\n\r\n                            <div style={{marginTop: '25px'}} name=\"freq-course-container\">\r\n                                <div name=\"freq-course-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Frequent Courses</h4>\r\n                                </div>   \r\n                                <div name=\"freq-course-name\" style={{textAlign: 'center'}}>\r\n                                    {this.state.courses.map((item) => \r\n                                    (<p><Link to={\"/course/\" + item}>{item}</Link></p>))}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={pageBreak}/> {/* underline */}\r\n                            \r\n                        </Col>\r\n                        <Col sm={7}>\r\n                            <Tabs style={tabStyle} defaultActiveKey=\"reviews\" transition={false}>\r\n                                <Tab eventKey=\"reviews\" title=\"Reviews\">\r\n                                {this.state.reviews.map((item, index) => \r\n                                            (<ReviewItem id={index} key={\"professor-review\"+index} reviewItem={item}/>)\r\n                                        ) /* generate all the reviews for this page */} \r\n                                </Tab>\r\n                                <Tab eventKey=\"forums\" title=\"Forums\">\r\n                                    <h6>Nothing to show yet; come back soon!</h6>\r\n                                </Tab>\r\n                                <Tab eventKey=\"create-review\" title=\"Create Review\">\r\n                                    {cookie.load('isLoggedIn') === \"true\" ? \r\n                                        (<ReviewForm review=\"instructor\"/>)\r\n                                        : (<div style={{marginLeft: \"20px\"}}>Please log in or signup to create a review.</div>)\r\n                                    }\r\n                                    \r\n                                </Tab>\r\n                            </Tabs>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Course.js",["160","161"],"import React, { Component } from \"react\";\r\nimport {Container, Row, Col, Tab, Button} from 'react-bootstrap'; \r\nimport {Link} from 'react-router-dom'; \r\nimport ReviewItem from '../components/ReviewItem'; \r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport StarRatings from 'react-star-ratings';\r\nimport ReviewForm from '../components/ReviewForm'; \r\nimport cookie from 'react-cookies'; \r\n\r\nconst pageStyles={\r\n    margin: '0 auto', \r\n    marginTop: '3%', \r\n    width: '90%', \r\n}; \r\n\r\nconst pageBreak = {\r\n    //this sets the margin for reviews and draws a line hovering under the titles \r\n    marginBottom: '2%', \r\n    marginTop: '2%', \r\n    height: '1px',\r\n    backgroundColor: '#dedede',\r\n    border: 'none',\r\n}\r\n\r\nconst tabStyle = { \r\n    paddingTop: '2.5%', \r\n    backgroundColor: '#ecf0f1', \r\n}\r\n\r\nexport default class Course extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //use state because react forces an update when it is modifed in some way \r\n        this.state = { //all the content that is gonna be retrieved from the api stored here locally\r\n            name: this.props.match.params.courseName,\r\n            department: \"COSC\", \r\n            code: \"2P03\", \r\n            avgRating: 3.6, \r\n            lectureRating: 2.5, \r\n            instructorRating: 4.8, \r\n            homeworkRating: 3.2, \r\n            reviews:[ \r\n                {//reviews would be an object \r\n                    title: \"Difficult but Important course!\",\r\n                    content: \"COSC 2P03 is one of the most foundational courses in the program. It opens the door to the rest of the computer science department and tests your knowledge. Beware, it can be quite tricky.\",\r\n                    rating: 3.9, \r\n                    user: \"seth\", \r\n                    comments: null, \r\n                }, \r\n            \r\n            ],  \r\n            instructors: [\r\n                \"Dave Bockus\", \r\n                \"Earl Foxwell\", \r\n            ], //another object \r\n            aliases: \"\", \r\n        }\r\n        //this.componentDidMount(); \r\n    }\r\n\r\n    //TODO: GET req goes here that fetches data based on uid\r\n    componentDidMount() {\r\n        //this is just to have but will need to be slightly refactored \r\n        //once we talk to the back end people about how their stuff is named such as 'get-couse'\r\n        fetch('/api/get-course' + '?code=' + this.name)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            this.setState({ // the data.<variable> is just an example and will need to be changed to reflect what the backend returns \r\n                department: data.department, \r\n                code: data.code, \r\n                avgRating: data.avg_rating, \r\n                reviews: data.reviews, \r\n                instructors: data.instructors, \r\n                aliases: data.aliases, \r\n            });\r\n        }); \r\n    }\r\n\r\n    render() {\r\n        console.log(this.id);\r\n        return (\r\n            <div style={pageStyles}>\r\n                <Container fluid=\"md\">\r\n                    <Row> {/* title row, includes course name and reviews*/}\r\n                        <Col sm={4}>\r\n                            <div name=\"title\">\r\n                                <h1 style={{textAlign: 'center'}}>{this.state.name}</h1>\r\n                            </div>  \r\n                            <div style={pageBreak}/> {/* underline */}\r\n\r\n                            <div name=\"avg-rating-container\">\r\n                                <div name=\"avg-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Overall Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"avg-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <StarRatings\r\n                                        rating={this.state.avgRating}\r\n                                        starDimension=\"40px\"\r\n                                        starSpacing=\"10px\"\r\n                                        starRatedColor=\"red\"\r\n                                        numberOfStars={5}\r\n                                        name='avgRating'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div name=\"lecture-rating-container\" style={{marginTop: '25px'}}>\r\n                                <div name=\"lecture-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Lecture Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"lecture-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <StarRatings\r\n                                        rating={this.state.lectureRating}\r\n                                        starDimension=\"30px\"\r\n                                        starSpacing=\"10px\"\r\n                                        starRatedColor=\"red\"\r\n                                        numberOfStars={5}\r\n                                        name='lectureRating'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div name=\"homework-rating-container\" style={{marginTop: '25px'}}>\r\n                                <div name=\"homework-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Homework Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"homework-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <StarRatings\r\n                                        rating={this.state.homeworkRating}\r\n                                        starDimension=\"30px\"\r\n                                        starSpacing=\"10px\"\r\n                                        starRatedColor=\"red\"\r\n                                        numberOfStars={5}\r\n                                        name='homeworkRating'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div name=\"instructor-rating-container\" style={{marginTop: '25px'}}>\r\n                                <div name=\"instructor-rating-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Instructor Rating</h4>\r\n                                </div>  \r\n                                <div style={{textAlign: 'center'}} name=\"instructor-rating\">\r\n                                    {/* this displays average # of stars*/}\r\n                                    <StarRatings\r\n                                        rating={this.state.instructorRating}\r\n                                        starDimension=\"30px\"\r\n                                        starSpacing=\"10px\"\r\n                                        starRatedColor=\"red\"\r\n                                        numberOfStars={5}\r\n                                        name='instructorRating'\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={pageBreak}/> {/* underline */}\r\n\r\n                            <div style={{marginTop: '25px'}} name=\"freq-prof-container\">\r\n                                <div name=\"freq-professor-title\">\r\n                                    <h4 style={{textAlign: 'center'}}>Frequent Professors</h4>\r\n                                </div>   \r\n                                <div name=\"freq-prof-name\" style={{textAlign: 'center'}}>\r\n                                    {this.state.instructors.map((item) => \r\n                                    (<p><Link to={\"/professor/\" + item}>{item}</Link></p>))}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div style={pageBreak}/> {/* underline */}\r\n                            \r\n                        </Col>\r\n                        <Col sm={7}>\r\n                            <Tabs style={tabStyle} defaultActiveKey=\"reviews\" transition={false}>\r\n                                <Tab eventKey=\"reviews\" title=\"Reviews\">\r\n                                {this.state.reviews.map((item, index) => \r\n                                            (<ReviewItem id={index} key={\"course-review\"+index}reviewItem={item}/>)\r\n                                        ) /* generate all the reviews for this page */} \r\n                                </Tab>\r\n                                <Tab eventKey=\"forums\" title=\"Forums\">\r\n                                    <h6>Nothing to show yet; come back soon!</h6>\r\n                                </Tab>\r\n                                <Tab eventKey=\"create-review\" title=\"Create Review\">\r\n                                {cookie.load('isLoggedIn') === \"true\" ? \r\n                                        (<ReviewForm review=\"course\"/>)\r\n                                        : (<div style={{marginLeft: \"20px\"}}>Please log in or signup to create a review.</div>)\r\n                                    }\r\n                                </Tab>\r\n                            </Tabs>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Courses.js",["162","163","164","165"],"import React, { Component } from \"react\";\r\nimport List from \"../components/List\";\r\nimport Button from \"../components/Button\";\r\nimport Dropdown from \"../components/Dropdown\";\r\nimport { Icon } from \"react-icons-kit\";\r\nimport { chevronDown } from \"react-icons-kit/fa/chevronDown\";\r\nimport { chevronUp } from \"react-icons-kit/fa/chevronUp\";\r\nimport { chevronLeft } from \"react-icons-kit/fa/chevronLeft\";\r\nimport { chevronRight } from \"react-icons-kit/fa/chevronRight\";\r\nimport { minus } from \"react-icons-kit/fa/minus\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nexport default class Courses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            unfilteredData: [],\r\n            filters: [\"Rating\", \"Department\", \"Show per page\"],\r\n            options: { Rating: [], Department: [], \"Show per page\": [] },\r\n            Rating: null,\r\n            Department: null,\r\n            \"Show per page\": null,\r\n            sortButtons: [\"Code\", \"Name\", \"Rating\", \"Department\"],\r\n            sortIndex: \"\",\r\n            accending: true,\r\n            perPage: 10,\r\n            currentPage: 1,\r\n            maxPage: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getOptions();\r\n        this.getEntries(() => {\r\n            if (this.props.location.id) {\r\n                this.handleFilter(\"Department\", this.props.location.id.name);\r\n            }\r\n        });\r\n    }\r\n\r\n    // TODO: GET courses\r\n    getEntries = async (callback) => {\r\n        await fetch(\"http://localhost:3000/data/courses.json\").then((res) => {\r\n            res.json().then((data) => {\r\n                this.setState(\r\n                    { data: data.data, unfilteredData: data.data },\r\n                    () => {\r\n                        var length = Math.ceil(\r\n                            this.state.data.length / this.state.perPage\r\n                        );\r\n                        this.setState({ maxPage: length });\r\n                        callback();\r\n                    }\r\n                );\r\n            });\r\n        });\r\n    };\r\n\r\n    getOptions = () => {\r\n        var options = {\r\n            Rating: [\r\n                \"4.0 and higher\",\r\n                \"3.0 and higher\",\r\n                \"2.0 and higher\",\r\n                \"1.0 and higher\",\r\n                \"All Ratings\",\r\n            ],\r\n            Department: [\r\n                \"Humanities\",\r\n                \"Math and Computer Science\",\r\n                \"Social Sciences\",\r\n                \"Visual and Performance Arts\",\r\n                \"Goodman School of Business\",\r\n                \"Applied Health Sciences\",\r\n                \"Education\",\r\n                \"All Departments\",\r\n            ],\r\n            \"Show per page\": [\"10\", \"20\", \"50\", \"100\", \"All\"],\r\n        };\r\n        this.setState({ options: options });\r\n    };\r\n\r\n    getCurrentPage = () => {\r\n        if (this.state.perPage === \"All\") {\r\n            return this.state.data;\r\n        } else {\r\n            var minIndex = (this.state.currentPage - 1) * this.state.perPage;\r\n            var maxIndex = this.state.currentPage * this.state.perPage;\r\n            return this.state.data.slice(minIndex, maxIndex);\r\n        }\r\n    };\r\n\r\n    handleNavigate = (e) => {\r\n        if (e.target.id === \"navigate-back\" && this.state.currentPage > 1) {\r\n            this.setState((old) => {\r\n                return { currentPage: old.currentPage - 1 };\r\n            });\r\n        }\r\n        if (\r\n            e.target.id === \"navigate-forward\" &&\r\n            this.state.currentPage < this.state.maxPage\r\n        ) {\r\n            this.setState((old) => {\r\n                return { currentPage: old.currentPage + 1 };\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        const newSortIndex = e.target.id.toLowerCase();\r\n        if (newSortIndex === this.state.sortIndex) {\r\n            const accending = !this.state.accending;\r\n            this.setState({ accending: accending }, () =>\r\n                this.sortData(newSortIndex)\r\n            );\r\n        } else {\r\n            this.setState({ sortIndex: newSortIndex }, () =>\r\n                this.sortData(newSortIndex)\r\n            );\r\n        }\r\n    };\r\n\r\n    handleFilter = (field, value) => {\r\n        if (field === \"Show per page\") {\r\n            this.setState({ perPage: value });\r\n        }\r\n        this.setState({ [field]: value }, () => {\r\n            this.setState({ data: this.state.unfilteredData }, () => {\r\n                var filteredData = [];\r\n                this.state.data.forEach((e) => {\r\n                    if (\r\n                        (e.department === this.state.Department) |\r\n                            ((this.state.Department === \"All Departments\") |\r\n                                !this.state.Department) &&\r\n                        (e.rating >= parseFloat(this.state.Rating)) |\r\n                            ((this.state.Rating === \"All Ratings\") |\r\n                                !this.state.Rating)\r\n                    ) {\r\n                        filteredData.push(e);\r\n                    }\r\n                });\r\n                var newMaxPage = Math.ceil(\r\n                    filteredData.length / this.state.perPage\r\n                );\r\n                this.setState(\r\n                    { data: filteredData, maxPage: newMaxPage },\r\n                    () => {\r\n                        this.sortData(this.state.sortIndex);\r\n                    }\r\n                );\r\n            });\r\n        });\r\n    };\r\n\r\n    sortData = (sortIndex) => {\r\n        this.setState({\r\n            data: this.state.data.sort((a, b) => {\r\n                if (\r\n                    (sortIndex == \"name\") |\r\n                    (sortIndex == \"department\") |\r\n                    (sortIndex === \"code\")\r\n                ) {\r\n                    if (this.state.accending) {\r\n                        return a[sortIndex].localeCompare(b[sortIndex]);\r\n                    } else {\r\n                        return b[sortIndex].localeCompare(a[sortIndex]);\r\n                    }\r\n                } else {\r\n                    if (this.state.accending) {\r\n                        return a[sortIndex] - b[sortIndex];\r\n                    } else {\r\n                        return b[sortIndex] - a[sortIndex];\r\n                    }\r\n                }\r\n            }),\r\n            currentPage: 1,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return !this.state.data.length ? (\r\n            <Loading size=\"75\" />\r\n        ) : (\r\n            //Body\r\n            <div className=\"courses-container\">\r\n                {\r\n                    //Filter Buttons\r\n                    <div className=\"filter-container\">\r\n                        <div className=\"filter-label\">Filters</div>\r\n                        <div className=\"filter-buttons\">\r\n                            {this.state.filters.map((e) => {\r\n                                return (\r\n                                    <Dropdown\r\n                                        id={e}\r\n                                        className=\"filter-button\"\r\n                                        text={e}\r\n                                        options={this.state.options[e]}\r\n                                        icon={chevronDown}\r\n                                        iconSize=\"12\"\r\n                                        handleSelect={this.handleFilter}\r\n                                        selected={this.state[e]}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {\r\n                    <div className=\"sort-buttons\">\r\n                        {this.state.sortButtons.map((e) => {\r\n                            var arrow = minus;\r\n                            if (this.state.sortIndex == e.toLowerCase()) {\r\n                                arrow = this.state.accending\r\n                                    ? (arrow = chevronDown)\r\n                                    : (arrow = chevronUp);\r\n                            }\r\n                            return (\r\n                                <>\r\n                                    <Button\r\n                                        id={e}\r\n                                        className=\"sort-button\"\r\n                                        text={e}\r\n                                        onClick={this.handleClick}\r\n                                        icon={arrow}\r\n                                        iconSize=\"10\"\r\n                                    />\r\n                                </>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                }\r\n                {\r\n                    <div className=\"list-container\">\r\n                        <List\r\n                            data={this.getCurrentPage()}\r\n                            columns={[\"code\", \"rating\", \"department\", \"name\"]}\r\n                            link={\"/course/\"}\r\n                        />\r\n                    </div>\r\n                }\r\n                {this.state.perPage < this.state.data.length && (\r\n                    <div className=\"navigation-container\">\r\n                        <Button\r\n                            id=\"navigate-back\"\r\n                            className=\"navigate-button\"\r\n                            text=\"\"\r\n                            onClick={this.handleNavigate}\r\n                            icon={chevronLeft}\r\n                            iconSize=\"12\"\r\n                        />\r\n                        <div className=\"label\">\r\n                            {this.state.currentPage + \"/\" + this.state.maxPage}\r\n                        </div>\r\n                        <Button\r\n                            id=\"navigate-forward\"\r\n                            className=\"navigate-button\"\r\n                            text=\"\"\r\n                            onClick={this.handleNavigate}\r\n                            icon={chevronRight}\r\n                            iconSize=\"12\"\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\PageNotFound.js",["166"],"import React, { Component } from \"react\";\r\n\r\nfunction PageNotFound() {\r\n    \r\n   \r\n        return <div ><h1>Page not found</h1></div>\r\n    \r\n}\r\n\r\nexport default PageNotFound; \r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\pages\\Professors.js",["167"],"import React, { Component } from \"react\";\r\nimport List from \"../components/List\";\r\nimport Button from \"../components/Button\";\r\nimport Dropdown from \"../components/Dropdown\";\r\nimport { Icon } from \"react-icons-kit\";\r\nimport { chevronDown } from \"react-icons-kit/fa/chevronDown\";\r\nimport { chevronUp } from \"react-icons-kit/fa/chevronUp\";\r\nimport { chevronLeft } from \"react-icons-kit/fa/chevronLeft\";\r\nimport { chevronRight } from \"react-icons-kit/fa/chevronRight\";\r\nimport { minus } from \"react-icons-kit/fa/minus\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nexport default class Courses extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            unfilteredData: [],\r\n            filters: [\"Rating\", \"Department\", \"Show per page\"],\r\n            options: { Rating: [], Department: [], \"Show per page\": [] },\r\n            Rating: null,\r\n            Department: null,\r\n            \"Show per page\": null,\r\n            sortButtons: [\"Name\", \"Rating\", \"Department\", \"Courses\"],\r\n            sortIndex: \"\",\r\n            accending: true,\r\n            perPage: 10,\r\n            currentPage: 1,\r\n            maxPage: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getOptions();\r\n        this.getEntries(() => {\r\n            if (this.props.location.id) {\r\n                this.handleFilter(\"Department\", this.props.location.id.name);\r\n            }\r\n        });\r\n    }\r\n\r\n    // TODO: GET profs\r\n    getEntries = async (callback) => {\r\n        await fetch(\"http://localhost:3000/data/professors.json\").then(\r\n            (res) => {\r\n                res.json().then((data) => {\r\n                    this.setState(\r\n                        { data: data.data, unfilteredData: data.data },\r\n                        () => {\r\n                            var length = Math.ceil(\r\n                                this.state.data.length / this.state.perPage\r\n                            );\r\n                            this.setState({ maxPage: length });\r\n                            callback();\r\n                        }\r\n                    );\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    getOptions = () => {\r\n        var options = {\r\n            Rating: [\r\n                \"4.0 and higher\",\r\n                \"3.0 and higher\",\r\n                \"2.0 and higher\",\r\n                \"1.0 and higher\",\r\n                \"All Ratings\",\r\n            ],\r\n            Department: [\r\n                \"Humanities\",\r\n                \"Math and Computer Science\",\r\n                \"Social Sciences\",\r\n                \"Visual and Performance Arts\",\r\n                \"Goodman School of Business\",\r\n                \"Applied Health Sciences\",\r\n                \"Education\",\r\n                \"All Departments\",\r\n            ],\r\n            \"Show per page\": [\"10\", \"20\", \"50\", \"100\", \"All\"],\r\n        };\r\n        this.setState({ options: options });\r\n    };\r\n\r\n    getCurrentPage = () => {\r\n        if (this.state.perPage === \"All\") {\r\n            return this.state.data;\r\n        } else {\r\n            var minIndex = (this.state.currentPage - 1) * this.state.perPage;\r\n            var maxIndex = this.state.currentPage * this.state.perPage;\r\n            return this.state.data.slice(minIndex, maxIndex);\r\n        }\r\n    };\r\n\r\n    handleNavigate = (e) => {\r\n        if (e.target.id === \"navigate-back\" && this.state.currentPage > 1) {\r\n            this.setState((old) => {\r\n                return { currentPage: old.currentPage - 1 };\r\n            });\r\n        }\r\n        if (\r\n            e.target.id === \"navigate-forward\" &&\r\n            this.state.currentPage < this.state.maxPage\r\n        ) {\r\n            this.setState((old) => {\r\n                return { currentPage: old.currentPage + 1 };\r\n            });\r\n        }\r\n    };\r\n\r\n    handleSort = (e) => {\r\n        const newSortIndex = e.target.id.toLowerCase();\r\n        if (newSortIndex === this.state.sortIndex) {\r\n            const accending = !this.state.accending;\r\n            this.setState({ accending: accending }, () =>\r\n                this.sortData(newSortIndex)\r\n            );\r\n        } else {\r\n            this.setState({ sortIndex: newSortIndex }, () =>\r\n                this.sortData(newSortIndex)\r\n            );\r\n        }\r\n    };\r\n\r\n    handleFilter = (field, value) => {\r\n        if (field === \"Show per page\") {\r\n            this.setState({ perPage: value });\r\n        }\r\n        console.log(this.state.data, this.state.unfilteredData);\r\n        this.setState({ [field]: value }, () => {\r\n            this.setState({ data: this.state.unfilteredData }, () => {\r\n                console.log(this.state.data, this.state.unfilteredData);\r\n                var filteredData = [];\r\n                this.state.data.forEach((e) => {\r\n                    if (\r\n                        (e.department === this.state.Department) |\r\n                            ((this.state.Department === \"All Departments\") |\r\n                                !this.state.Department) &&\r\n                        (e.rating >= parseFloat(this.state.Rating)) |\r\n                            ((this.state.Rating === \"All Ratings\") |\r\n                                !this.state.Rating)\r\n                    ) {\r\n                        filteredData.push(e);\r\n                    }\r\n                });\r\n                var newMaxPage = Math.ceil(\r\n                    filteredData.length / this.state.perPage\r\n                );\r\n                this.setState(\r\n                    { data: filteredData, maxPage: newMaxPage },\r\n                    () => {\r\n                        this.sortData(this.state.sortIndex);\r\n                    }\r\n                );\r\n            });\r\n        });\r\n    };\r\n\r\n    sortData = (sortIndex) => {\r\n        this.setState({\r\n            data: this.state.data.sort((a, b) => {\r\n                if ((sortIndex === \"name\") | (sortIndex === \"department\")) {\r\n                    if (this.state.accending) {\r\n                        return a[sortIndex].localeCompare(b[sortIndex]);\r\n                    } else {\r\n                        return b[sortIndex].localeCompare(a[sortIndex]);\r\n                    }\r\n                } else {\r\n                    if (this.state.accending) {\r\n                        return a[sortIndex] - b[sortIndex];\r\n                    } else {\r\n                        return b[sortIndex] - a[sortIndex];\r\n                    }\r\n                }\r\n            }),\r\n            currentPage: 1,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return !this.state.data.length ? (\r\n            <Loading size=\"75\" />\r\n        ) : (\r\n            //Body\r\n            <div className=\"professors-container\">\r\n                {\r\n                    //Filter Buttons\r\n                    <div className=\"filter-container\">\r\n                        <div className=\"filter-label\">Filters</div>\r\n                        <div className=\"filter-buttons\">\r\n                            {this.state.filters.map((e) => {\r\n                                return (\r\n                                    <Dropdown\r\n                                        id={e}\r\n                                        className=\"filter-button\"\r\n                                        text={e}\r\n                                        options={this.state.options[e]}\r\n                                        icon={chevronDown}\r\n                                        iconSize=\"12\"\r\n                                        handleSelect={this.handleFilter}\r\n                                        selected={this.state[e]}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                }\r\n                {\r\n                    //Sort Buttons\r\n                    <div className=\"sort-buttons\">\r\n                        {this.state.sortButtons.map((e) => {\r\n                            var arrow = minus;\r\n                            if (this.state.sortIndex === e.toLowerCase()) {\r\n                                arrow = this.state.accending\r\n                                    ? (arrow = chevronDown)\r\n                                    : (arrow = chevronUp);\r\n                            }\r\n                            return (\r\n                                <Button\r\n                                    id={e}\r\n                                    className=\"sort-button\"\r\n                                    text={e}\r\n                                    onClick={this.handleSort}\r\n                                    icon={arrow}\r\n                                    iconSize=\"10\"\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n                }\r\n                {\r\n                    //List\r\n                    <div className=\"list-container\">\r\n                        <List\r\n                            data={this.getCurrentPage()}\r\n                            columns={[\r\n                                \"name\",\r\n                                \"courses\",\r\n                                \"department\",\r\n                                \"rating\",\r\n                            ]}\r\n                            link={\"/course/\"}\r\n                        />\r\n                    </div>\r\n                }\r\n                {\r\n                    //Navigation Buttons\r\n                    this.state.perPage < this.state.data.length && (\r\n                        <div className=\"navigation-container\">\r\n                            <Button\r\n                                id=\"navigate-back\"\r\n                                className=\"navigate-button\"\r\n                                text=\"\"\r\n                                onClick={this.handleNavigate}\r\n                                icon={chevronLeft}\r\n                                iconSize=\"12\"\r\n                            />\r\n                            <div className=\"label\">\r\n                                {this.state.currentPage +\r\n                                    \"/\" +\r\n                                    this.state.maxPage}\r\n                            </div>\r\n                            <Button\r\n                                id=\"navigate-forward\"\r\n                                className=\"navigate-button\"\r\n                                text=\"\"\r\n                                onClick={this.handleNavigate}\r\n                                icon={chevronRight}\r\n                                iconSize=\"12\"\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\assets\\Signout.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\HomeCarosel.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\SignupForm.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Search.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Logo.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Rating.js",["168","169"],"import React, { Component } from \"react\";\r\nexport default class Rating extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    //TODO: GET ratings depending on type\r\n    getRatings() {\r\n        var rating;\r\n        var id = this.props.id;\r\n\r\n        rating = 4.7;\r\n\r\n        return rating;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.className}>\r\n                <h2>\r\n                    {this.props.title} {this.getRatings()}\r\n                </h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\LoginForm.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Loading.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Button.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\ReviewForm.js",["170","171"],"//form that is presented to user when they create a review \r\nimport {React, Component} from 'react'; \r\nimport Form from 'react-bootstrap/Form'; \r\nimport {Button} from 'react-bootstrap'; \r\nimport cookie from 'react-cookies'; \r\n\r\n\r\nconst questions = { \r\n    \"course\": [\r\n        \"On a scale of 1 to 5, how did you find the lectures for this course? \", \r\n        \"On a scale of 1 - 5, was the homework for this course?\", \r\n        \"On a scale of 1 - 5, how was the instructor for this course?\"\r\n    ], \r\n    \"instructor\" : [\r\n        \"On a scale of 1 to 5, how were the lecturing abilities of this instructor? \", \r\n        \"On a scale of 1 - 5, how was the homework this instructor assigned?\", \r\n        \"On a scale of 1 - 5, how was the course this instructor taught?\"\r\n    ], \r\n    \"department\": [\r\n        \"On a scale of 1 - 5, what is the quality of courses from this department?\", \r\n        \"On a scale of 1 - 5, what \" \r\n    ],  \r\n}\r\n\r\nconst formStyle = { \r\n    marginTop: '5%', \r\n}\r\n\r\nconst buttonStyle={\r\n    //height: '100vh',  \r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n}\r\n\r\nexport default class ReviewForm extends Component { \r\n    constructor(props){\r\n        super(props); \r\n        this.state = { \r\n            reviewType: props.review, \r\n            title: \"\", \r\n            content: \"\", \r\n            rating1: 1, \r\n            rating2: 1, \r\n            rating3: 1, \r\n            date: (new Date()).toString(), \r\n            user: {\r\n                userName: 'seth', \r\n                email: 'ss16wn@brocku.ca', \r\n            }\r\n        }\r\n\r\n        this.updateTitleInput = this.updateTitleInput.bind(this); \r\n        this.updateContentInput = this.updateContentInput.bind(this); \r\n        this.updateRating1 = this.updateRating1.bind(this); \r\n        this.updateRating2 = this.updateRating2.bind(this); \r\n        this.updateRating3 = this.updateRating3.bind(this); \r\n        \r\n        this.submitReview = this.submitReview.bind(this); \r\n    }\r\n\r\n    updateTitleInput(obj){\r\n        this.setState({\r\n            title: obj.target.value, \r\n        }); \r\n    }\r\n\r\n    updateContentInput(obj){\r\n        this.setState({\r\n            content: obj.target.value, \r\n        }); \r\n    }\r\n\r\n    updateRating1(obj){\r\n        this.setState({\r\n            rating1: parseFloat(obj.target.value), \r\n        }); \r\n    }\r\n\r\n    updateRating2(obj){\r\n        this.setState({\r\n            rating2: parseFloat(obj.target.value), \r\n        }); \r\n    }\r\n\r\n    updateRating3(obj){\r\n        this.setState({\r\n            rating3: parseFloat(obj.target.value), \r\n        })\r\n    }\r\n\r\n\r\n    submitReview = () =>{\r\n\r\n        let overallRating = (this.state.rating1 + this.state.rating2 + this.state.rating3) / 3; \r\n        \r\n        const newReview = { \r\n            title: this.state.title, \r\n            content: this.state.content, \r\n            avgRating: overallRating, \r\n            rating1: this.state.rating1,\r\n            rating2: this.state.rating2, \r\n            rating3: this.state.rating3, \r\n            date: this.state.date, \r\n            user: this.setState.user.userName, \r\n        }\r\n    }\r\n\r\n\r\n    render() { \r\n        return(\r\n            <div style={formStyle} name=\"review-form-container\">\r\n                <Form>\r\n                    <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                        <Form.Label>Title</Form.Label>\r\n                        <Form.Control isInvalid={this.state.title === null} placeholder=\"Title...\" onChange={this.updateTitleInput}/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                        {questions[this.state.reviewType].map((question, index) => \r\n                        (<div key={index} style={{marginTop: '10px'}}name={\"dropdown-question\" + index} > \r\n                        <Form.Label>{question}</Form.Label>\r\n                            <Form.Control onChange={index === 1 ?this.updateRating1 : index === 2 ? this.updateRating2 : this.updateRating3} as=\"select\">\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3</option>\r\n                                <option>4</option>\r\n                                <option>5</option>\r\n                            </Form.Control> </div>\r\n                        ))}\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n                        <Form.Label>What did you think of this {this.state.reviewType}? </Form.Label>\r\n                        <Form.Control onChange={this.updateContentInput} as=\"textarea\" rows={5} />\r\n                    </Form.Group>\r\n                    <div style={buttonStyle}>\r\n                        <Button onClick={this.submitReview} variant=\"danger\" size=\"lg\" type=\"submit\">\r\n                            Submit Review\r\n                        </Button>\r\n                    </div>\r\n                    \r\n                </Form>\r\n            </div>\r\n        ); \r\n    }\r\n}","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\ReviewItem.js",["172","173"],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Card, Accordion, Button, ListGroup, ListGroupItem} from 'react-bootstrap'; \r\nimport StarRatings from 'react-star-ratings';\r\n\r\n\r\nconst noCommentMessage = \"No comments yet!\";\r\n\r\n\r\nexport default class ReviewItem extends Component {\r\n\r\n    //props is going to consist of the review item passed by the course \r\n    constructor(props){\r\n        super(props); \r\n        //props contains object called reviewItem containing \r\n        /*\r\n        -Title \r\n        -Content\r\n        -Rating \r\n        -User\r\n        -Comments (object)\r\n        */\r\n    }\r\n\r\n    //the JSX that is rendered when this file is imported as a component \r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                {/* container (card )which includes a title section + rating and a content section + button to see comments */}\r\n                    <Card style={{marginTop: '4%'}}>\r\n                        <Accordion>\r\n                            <Card.Body>\r\n                                <Card.Title>{this.props.reviewItem.title}<p style={{float: \"right\"}}>{new Date().getFullYear()}</p></Card.Title>\r\n                                <Card.Subtitle className=\"mb-2 text-muted\">{this.props.reviewItem.user + \" \"} \r\n                                    <StarRatings\r\n                                        rating={this.props.reviewItem.rating}\r\n                                        starDimension=\"25px\"\r\n                                        starSpacing=\"5px\"\r\n                                        starRatedColor=\"red\"\r\n                                        numberOfStars={5}\r\n                                        name='avgRating'\r\n                                    />\r\n                                </Card.Subtitle>\r\n                                <Card.Text>\r\n                                    {this.props.reviewItem.content}\r\n                                </Card.Text>\r\n                                <Accordion.Toggle as={Button} variant=\"danger\" eventKey=\"0\">\r\n                                    Show Comments\r\n                                </Accordion.Toggle>\r\n                            </Card.Body>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <ListGroup >\r\n                                    {this.props.reviewItem.comments != null ?\r\n                                        this.props.reviewItem.comments.map((item, index) => \r\n                                            <ListGroupItem key={index}>\r\n                                                {item.content}\r\n                                            </ListGroupItem> )\r\n                                        : \"No comments yet!\"} \r\n                                </ListGroup>\r\n                            </Accordion.Collapse>\r\n                        </Accordion>    \r\n                    </Card>\r\n            </div>\r\n        );\r\n    }\r\n}","C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\List.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Dropdown.js",[],"C:\\Users\\munam\\OneDrive\\Documents\\GitHub\\COSC-4P02-R8Scholar\\r8scholar-frontend\\src\\components\\Post.js",["174","175"],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":12},{"ruleId":"184","severity":1,"message":"185","line":44,"column":121,"nodeType":"186","endLine":44,"endColumn":133},{"ruleId":"184","severity":1,"message":"185","line":44,"column":207,"nodeType":"186","endLine":44,"endColumn":219},{"ruleId":"184","severity":1,"message":"185","line":55,"column":29,"nodeType":"186","endLine":55,"endColumn":91},{"ruleId":"184","severity":1,"message":"185","line":77,"column":33,"nodeType":"186","endLine":77,"endColumn":45},{"ruleId":"184","severity":1,"message":"185","line":80,"column":33,"nodeType":"186","endLine":80,"endColumn":45},{"ruleId":"184","severity":1,"message":"185","line":119,"column":33,"nodeType":"186","endLine":119,"endColumn":45},{"ruleId":"184","severity":1,"message":"185","line":122,"column":33,"nodeType":"186","endLine":122,"endColumn":45},{"ruleId":"184","severity":1,"message":"185","line":132,"column":29,"nodeType":"186","endLine":132,"endColumn":91},{"ruleId":"187","severity":1,"message":"188","line":12,"column":5,"nodeType":"189","messageId":"190","endLine":14,"endColumn":6},{"ruleId":"187","severity":1,"message":"188","line":12,"column":5,"nodeType":"189","messageId":"190","endLine":14,"endColumn":6},{"ruleId":"180","severity":1,"message":"191","line":3,"column":10,"nodeType":"182","messageId":"183","endLine":3,"endColumn":14},{"ruleId":"187","severity":1,"message":"188","line":7,"column":5,"nodeType":"189","messageId":"190","endLine":9,"endColumn":6},{"ruleId":"180","severity":1,"message":"192","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":14},{"ruleId":"180","severity":1,"message":"193","line":2,"column":35,"nodeType":"182","messageId":"183","endLine":2,"endColumn":41},{"ruleId":"180","severity":1,"message":"194","line":16,"column":7,"nodeType":"182","messageId":"183","endLine":16,"endColumn":18},{"ruleId":"195","severity":1,"message":"196","line":70,"column":33,"nodeType":"197","messageId":"198","endLine":70,"endColumn":34},{"ruleId":"199","severity":1,"message":"200","line":20,"column":33,"nodeType":"201","messageId":"202","endLine":20,"endColumn":35},{"ruleId":"180","severity":1,"message":"193","line":2,"column":35,"nodeType":"182","messageId":"183","endLine":2,"endColumn":41},{"ruleId":"180","severity":1,"message":"194","line":16,"column":7,"nodeType":"182","messageId":"183","endLine":16,"endColumn":18},{"ruleId":"195","severity":1,"message":"196","line":71,"column":37,"nodeType":"197","messageId":"198","endLine":71,"endColumn":38},{"ruleId":"180","severity":1,"message":"193","line":2,"column":35,"nodeType":"182","messageId":"183","endLine":2,"endColumn":41},{"ruleId":"195","severity":1,"message":"196","line":65,"column":33,"nodeType":"197","messageId":"198","endLine":65,"endColumn":34},{"ruleId":"180","severity":1,"message":"203","line":5,"column":10,"nodeType":"182","messageId":"183","endLine":5,"endColumn":14},{"ruleId":"204","severity":1,"message":"205","line":160,"column":32,"nodeType":"197","messageId":"206","endLine":160,"endColumn":34},{"ruleId":"204","severity":1,"message":"205","line":161,"column":32,"nodeType":"197","messageId":"206","endLine":161,"endColumn":34},{"ruleId":"204","severity":1,"message":"205","line":213,"column":54,"nodeType":"197","messageId":"206","endLine":213,"endColumn":56},{"ruleId":"180","severity":1,"message":"207","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":26},{"ruleId":"180","severity":1,"message":"203","line":5,"column":10,"nodeType":"182","messageId":"183","endLine":5,"endColumn":14},{"ruleId":"187","severity":1,"message":"188","line":3,"column":5,"nodeType":"189","messageId":"190","endLine":5,"endColumn":6},{"ruleId":"180","severity":1,"message":"208","line":10,"column":13,"nodeType":"182","messageId":"183","endLine":10,"endColumn":15},{"ruleId":"180","severity":1,"message":"209","line":5,"column":8,"nodeType":"182","messageId":"183","endLine":5,"endColumn":14},{"ruleId":"180","severity":1,"message":"210","line":97,"column":15,"nodeType":"182","messageId":"183","endLine":97,"endColumn":24},{"ruleId":"180","severity":1,"message":"211","line":7,"column":7,"nodeType":"182","messageId":"183","endLine":7,"endColumn":23},{"ruleId":"187","severity":1,"message":"188","line":13,"column":5,"nodeType":"189","messageId":"190","endLine":23,"endColumn":6},{"ruleId":"180","severity":1,"message":"207","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":19},{"ruleId":"180","severity":1,"message":"212","line":6,"column":7,"nodeType":"182","messageId":"183","endLine":6,"endColumn":20},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'Post' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Link' is defined but never used.","'Footer' is defined but never used.","'Button' is defined but never used.","'buttonStyle' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Icon' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","'Component' is defined but never used.","'id' is assigned a value but never used.","'cookie' is defined but never used.","'newReview' is assigned a value but never used.","'noCommentMessage' is assigned a value but never used.","'emptyComments' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]